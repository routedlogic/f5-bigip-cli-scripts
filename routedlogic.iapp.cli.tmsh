cli script routedlogic.iapp.0.0.1.cli {
    proc applyAccessPolicy { policy_name {FIXME} } {
      # APM policies do not commit in a reliable manner when configured via iApp.
      # This time-bomb script insures that the policy gets committed.
      # See subcase SR1-315233635 for details.
      if { [catch {
            set dir [tmsh::pwd]
            set fn "/var/tmp/iapp_${policy_name}.sh"
            set fh [open $fn w]
            puts $fh "sleep 5"
            puts $fh "tmsh modify apm profile access ${dir}/${policy_name} generation-action increment"
            close $fh
            exec chmod 777 $fn
            exec $fn &
      } err] } {
          # indicate apply probably failed
          return 0
      }
      # indicate apply should be successful
      return 1
    }

    # determines if the current user can execute shell commands or not
    proc canExecShell { } {
        if { [catch { set asdf [exec /bin/true] }] } {
            return 0
        }
        return 1
    }

    #
    # Proc to generate a string of (given) characters
    # Range defaults to "0...9ABCDEF...wxyz'
    #
    proc generateRandomAlphaNumericString {length {chars "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"}} {
        set range [expr {[string length $chars]-1}]

        set txt ""
        for {set i 0} {$i < $length} {incr i} {
           set pos [expr {int(rand()*$range)}]
           append txt [string range $chars $pos $pos]
        }
        return $txt
    }

    # merge a configuration script to the running configuration
    proc mergeToRunningConfig { { app {FIXME} } { cfg { } } } {
      set fileId [open /var/tmp/${app}-merge.cfg "w"]
      puts -nonewline ${fileId} ${cfg}
      close ${fileId}

      return [tmsh::load sys config merge file /var/tmp/${app}-merge.cfg]
    }

    # Determine if this iApp is a new configuration or an existing iApp that is now being reconfigured
    # Returns true (1) if the iApp is being reconfigured
    # Returns false (0) if the iApp is NOT being reconfigured, e.g. initial deployment for the first time
    #
    # WARNING: Will return false if the current user cannot execute shell commands.
    #
    proc iAppIsBeingReconfigured { } {
      if { [catch {set asdf [exec tmsh list sys application service "[tmsh::pwd]/${tmsh::app_name}"] } ] } {
        return {0}
      }
      return {1}
    }

    # Print timestamped and iApp path/name stamped logs to /var/tmp/scriptd.out
    proc logDebugTimestamped { message } {
      set currentSystemTime [clock seconds]
      puts [format "\[%s %s\]\[%s\] %s" [clock format ${currentSystemTime} -format %D] [clock format ${currentSystemTime} -format %H:%M:%S] [tmsh::pwd]/${tmsh::app_name} ${message}]
    }

    total-signing-status not-all-signed
}
